{"version":3,"sources":["components/mainText.js","components/subText.js","frames/message.js","helpers/helpers.js","components/textInput.js","components/textBox.js","factories/inputFactory.js","components/label.js","frames/singleQA.js","factories/frameFactory.js","components/button.js","components/help.js","components/stepperController.js","components/circle.js","components/stepperNav.js","helpers/instructions.js","components/stepper.js","App.js","serviceWorker.js","index.js"],"names":["StyledMainText","styled","h2","MainText","str","StyledSubText","p","SubText","subText","className","MessageFrame","div","Message","message","content","getColor","name","bg","bgHighlight","border","lightBorder","light","primary","secondary","info","danger","dark","getNeon","color","size","whiteBlur","lightGlow","lightBlur","darkGlow","darkBlur","whiteGlowInner","whiteBlurInner","lightGlowInner","lightBlurInner","darkGlowInner","darkBlurInner","shades","red","white","success","StyledInput","input","props","bgColor","TextInput","placeholder","id","label","fn","type","console","warn","onChange","onBlur","StyledTextBox","textarea","InputFactory","value","textInput","textBox","GetInput","StyledLabel","Label","question","htmlFor","children","StyledQA","form","SingleQA","addData","help","useState","userInput","setUserInput","onSubmit","val","StyledFrame","FrameFactory","frame","subtext","response","validation","tag","singleQA","getFrame","StyledButton","button","radius","fontSize","height","width","selected","Button","disabled","onClick","StyledHelpButton","span","Help","helpText","textVisible","setTextVisible","e","preventDefault","StyledStepperController","StepperController","next","prev","steps","step","setSteps","map","completed","StyledCircle","li","Circle","active","neon","setNeon","useEffect","StyledStepperNav","StepperNav","index","log","stepIndex","key","data","dataLabel","StepperWindow","Stepper","setFrame","setStep","currentStep","currentFrame","length","thisStep","thisFrame","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.e4ee9b84.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nexport const StyledMainText = styled.h2`\n  line-height: 48px;\n  font-size: 5rem;\n  font-weight: 300;\n  overflow-wrap: break-word;\n  word-break: break-word;\n`;\n\nconst MainText = ({ str }) => {\n  return <StyledMainText>{str}</StyledMainText>;\n};\n\nexport default MainText;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst StyledSubText = styled.p`\n  font-size: 2.5rem;\n  font-weight: 500;\n  line-height: 32px;\n  opacity: 0.8;\n  overflow-wrap: break-word;\n  word-break: break-word;\n`;\nconst SubText = ({ subText, className }) => {\n  return <StyledSubText className={className}>{subText}</StyledSubText>;\n};\n\nexport default SubText;\n","import React from \"react\";\nimport MainText from \"../components/mainText\";\nimport SubText from \"../components/subText\";\nimport styled from \"styled-components\";\n\nconst MessageFrame = styled.div``;\n\nconst Message = ({ message, subText, content }) => {\n  return (\n    <MessageFrame>\n      <MainText str={message} />\n      {subText && <SubText subText={subText} />}\n      {content && content}\n    </MessageFrame>\n  );\n};\n\nexport default Message;\n","export const getColor = (name) => {\n  const palette = {\n    bg: \"#0c0713\",\n    bgHighlight: \"#160e22\",\n    border: \"#25183a\",\n    lightBorder: \"#7d52c3\",\n    light: \"#e6e6e6\",\n    primary: \"#2DE2E6\",\n    secondary: \"#E92EFB\",\n    info: \"#440BD4\",\n    danger: \"#FF2079\",\n    dark: \"#08040c\",\n  };\n  return palette[name];\n};\nexport const getNeon = (color, size) => {\n  const whiteGlow = size * 0.1;\n  const whiteBlur = size * 0.4;\n  const lightGlow = size * 0.4;\n  const lightBlur = size * 0.6;\n  const darkGlow = size * 4;\n  const darkBlur = size * 0.4;\n  const whiteGlowInner = size * 0.5;\n  const whiteBlurInner = size * 0.2;\n  const lightGlowInner = size * 0.4;\n  const lightBlurInner = size * 0.2;\n  const darkGlowInner = size * 1.5;\n  const darkBlurInner = size * 0.4;\n\n  const shades = {\n    red: {\n      white: \"#fff7f7\",\n      light: \"#e97272\",\n      dark: \"#e50b0b\",\n    },\n    success: {\n      white: \"#f7fffe\",\n      light: \"#8bfcff\",\n      dark: \"#2de2e6\",\n    },\n  };\n\n  return `box-shadow: 0 0 ${whiteGlow}vw ${whiteBlur}vw ${shades[color].white},\n   0 0 ${lightGlow}vw ${lightBlur}vw ${shades[color].light},\n   0 0 ${darkGlow}vw ${darkBlur}vw ${shades[color].dark}, \n   inset 0 0 ${darkGlowInner}vw ${darkBlurInner}vw ${shades[color].dark},\n   inset 0 0 ${lightGlowInner}vw ${lightBlurInner}vw ${shades[color].light}, \n   inset 0 0 ${whiteGlowInner}vw ${whiteBlurInner}vw ${shades[color].white};`;\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { getColor } from \"../helpers/helpers\";\n\nconst StyledInput = styled.input`\n  display: inline-block;\n  background-color: ${(props) => props.bgColor};\n  box-sizing: border-box;\n  color: ${(props) => props.color};\n  font-size: 3rem;\n  font-weight: 400;\n  padding-left: 1rem;\n  height: 50px;\n  width: 400px;\n  border: none;\n  border: 1px solid ${getColor(\"border\")};\n  border-radius: 4px;\n  transition: 0.2s all;\n  font-family: inherit;\n  ::placeholder {\n    margin-left: 6px;\n    color: ${(props) => props.color};\n    opacity: 0.2;\n  }\n  :focus {\n    outline: none;\n    background-color: ${getColor(\"bgHighlight\")};\n  }\n`;\n\nconst TextInput = ({\n  placeholder,\n  label,\n  id,\n  fn,\n  type,\n  name,\n  className,\n  color,\n  bgColor,\n}) => {\n  id ||\n    console.warn(\n      \"Styled Input requires an id string to match the label with the input \"\n    );\n\n  return (\n    <StyledInput\n      id={id}\n      name={name || id || \"name your Input\"}\n      color={color || getColor(\"light\")}\n      bgColor={color || getColor(\"bg\")}\n      onChange={fn}\n      onBlur={fn}\n      placeholder={placeholder || \"Placeholder text\"}\n      type={type}\n      className={className}\n    />\n  );\n};\n\nexport default TextInput;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { getColor } from \"../helpers/helpers\";\n\nconst StyledTextBox = styled.textarea`\n  display: inline-block;\n  background-color: ${(props) => props.bgColor};\n  box-sizing: border-box;\n  resize: none;\n  color: ${(props) => props.color};\n  font-size: 2.5rem;\n  font-weight: 400;\n  padding: 2rem;\n  padding-left: 2rem;\n  height: 35vh;\n  width: 90%;\n  border: ${(props) => props.border};\n  border-radius: 4px;\n  transition: 0.2s all;\n  font-family: inherit;\n  ::placeholder {\n    margin-left: 6px;\n    color: ${(props) => props.color};\n    opacity: 0.2;\n  }\n  :focus {\n    outline: none;\n    background-color: ${getColor(\"bgHighlight\")};\n  }\n`;\n\nconst TextInput = ({\n  placeholder,\n  label,\n  border,\n  id,\n  fn,\n  type,\n  name,\n  className,\n  color,\n  bgColor,\n}) => {\n  id ||\n    console.warn(\n      \"Styled Input requires an id string to match the label with the input \"\n    );\n\n  return (\n    <StyledTextBox\n      id={id}\n      name={name || id || \"name your Input\"}\n      color={color || \"#ececec\"}\n      border={border || `1px solid ${getColor(\"border\")}`}\n      bgColor={color || getColor(\"bg\")}\n      onChange={fn}\n      onBlur={fn}\n      placeholder={placeholder || \"Placeholder text\"}\n      type={type}\n      className={className}\n    />\n  );\n};\n\nexport default TextInput;\n","import React from \"react\";\nimport TextInput from \"../components/textInput\";\nimport TextBox from \"../components/textBox\";\n\nconst GetInput = ({ value, fn, placeholder, type, id, className }) => {\n  const inputs = {\n    textInput: (\n      <TextInput\n        value={value}\n        fn={fn}\n        placeholder={placeholder}\n        id={id}\n        className={className}\n      />\n    ),\n    textBox: (\n      <TextBox\n        value={value}\n        fn={fn}\n        placeholder={placeholder}\n        id={id}\n        className={className}\n      />\n    ),\n  };\n  return inputs[type];\n};\n\nconst InputFactory = ({ input }) => {\n  return <>{GetInput(input)}</>;\n};\n\nexport default InputFactory;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { StyledMainText } from \"./mainText\";\n\nconst StyledLabel = styled(StyledMainText)``;\n\nconst Label = ({ question, htmlFor, children, className }) => {\n  return (\n    <StyledLabel htmlFor={htmlFor} className={className}>\n      {question}\n      {children}\n    </StyledLabel>\n  );\n};\n\nexport default Label;\n","import React, { useState } from \"react\";\nimport InputFactory from \"../factories/inputFactory\";\nimport Label from \"../components/label\";\nimport SubText from \"../components/subText\";\nimport styled from \"styled-components\";\n\nconst StyledQA = styled.form`\n  position: relative;\n\n  .QA-label {\n    margin-bottom: 3vh;\n  }\n  .QA-subtext {\n    margin-bottom: 5vh;\n    margin-left: 2rem;\n  }\n  .QA-input {\n    margin-left: 2rem;\n  }\n`;\n\nconst SingleQA = ({ addData, content, question, subText, input, help, id }) => {\n  const [userInput, setUserInput] = useState(\"\");\n\n  const checkValidation = () => {\n    //run val against a regex match function\n  };\n  const handleTyping = (val) => {\n    setUserInput(val);\n    checkValidation();\n  };\n  const submitData = () => {\n    addData(userInput);\n  };\n\n  return (\n    <StyledQA onSubmit={submitData}>\n      <Label question={question} htmlFor={question} className=\"QA-label\" />\n      {subText && (\n        <SubText subText={subText} htmlFor={question} className=\"QA-subtext\" />\n      )}\n      {content && content}\n\n      <InputFactory\n        input={{\n          ...input,\n          fn: handleTyping,\n          id: question,\n          className: \"QA-input\",\n          placeholder: \"Type here\",\n        }}\n      />\n    </StyledQA>\n  );\n};\n\nexport default SingleQA;\n","import React from \"react\";\nimport Message from \"../frames/message\";\nimport SingleQA from \"../frames/singleQA\";\nimport styled from \"styled-components\";\nimport { getColor } from \"../helpers/helpers\";\n\nconst StyledFrame = styled.div`\n  border-top: 1px solid ${getColor(\"border\")};\n  padding: 3vw;\n  margin: 1vw;\n  padding-bottom: 0;\n`;\n\nconst getFrame = ({\n  type,\n  message,\n  subtext,\n  content,\n  question,\n  subText,\n  addData,\n  input,\n  response,\n  validation,\n  help,\n  tag,\n}) => {\n  const frame = {\n    message: <Message message={message} subText={subtext} content={content} />,\n    singleQA: (\n      <SingleQA\n        addData={addData}\n        content={content}\n        question={question}\n        subText={subText}\n        input={input}\n        response={response}\n        validation={validation}\n        help={help}\n        id={tag}\n      />\n    ),\n  };\n  return frame[type];\n};\n\nconst FrameFactory = ({ frame }) => {\n  return <StyledFrame>{getFrame(frame)}</StyledFrame>;\n};\n\nexport default FrameFactory;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { getColor } from \"../helpers/helpers\";\n\nexport const StyledButton = styled.button`\n  padding: 0.25rem 1rem;\n  box-sizing: border-box;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: ${(props) => props.radius};\n  position: relative;\n  outline: none;\n  font-weight: 500;\n  font-size: ${(props) => props.fontSize};\n  cursor: pointer;\n  transition: 0.2s all;\n  height: ${(props) => props.height};\n  width: ${(props) => props.width};\n  background-color: ${(props) => props.bgColor};\n  color: ${(props) => (props.selected ? props.bgColor : props.color)};\n  border: ${(props) => props.border};\n  /* box-shadow: 0px 0px 2px 1px ${(props) => props.color}; */\n  :focus{\n    border: 1px solid ${getColor(\"lightBorder\")};\n  }\n  :hover {\n    background-color: ${getColor(\"bgHighlight\")}\n  }\n  :active{\n    background-color: ${getColor(\"border\")}\n  }\n  /* :focus {\n    box-shadow: 5px 5px 3px -3px rgba(89, 89, 89, 0.3);\n  } */\n\n  & > * {\n    pointer-events: none;\n  }\n  &.disabled{\n    color: ${getColor(\"dark\")};\n    cursor: default;\n    border: 1px solid ${getColor(\"dark\")};\n    :hover{\n       background-color: ${getColor(\"bg\")}\n    }\n  }\n`;\n\nconst Button = ({\n  className,\n  fn,\n  size,\n  content,\n  value,\n  height,\n  width,\n  bgColor,\n  fontSize,\n  color,\n  border,\n  radius,\n  selected,\n  disabled,\n}) => {\n  return (\n    <StyledButton\n      onClick={fn}\n      value={value}\n      height={height}\n      width={width}\n      fontSize={fontSize}\n      color={color || getColor(\"light\")}\n      bgColor={bgColor || getColor(\"bg\")}\n      radius={radius || \"4px\"}\n      border={border || `1px solid ${getColor(\"border\")}`}\n      className={`${selected && \"selected\"} \n      ${disabled && \"disabled\"} \n      ${className}`}\n    >\n      {content}\n    </StyledButton>\n  );\n};\n\nexport default Button;\n","import React, { useState } from \"react\";\nimport Button from \"./button\";\nimport styled from \"styled-components\";\nimport { getColor } from \"../helpers/helpers\";\n\nconst StyledHelpButton = styled.span`\n  position: relative;\n  .text-panel {\n    transform: translateY(calc(-100%));\n    font-size: 1.8rem;\n    width: 30rem;\n    position: absolute;\n    background-color: ${getColor(\"bgHighlight\")};\n    padding: 2rem;\n    font-weight: 400;\n  }\n`;\n\nconst Help = ({ helpText, className }) => {\n  const [textVisible, setTextVisible] = useState(false);\n  const toggleTextVisible = (e) => {\n    e.preventDefault();\n    if (!helpText) return;\n    setTextVisible(!textVisible);\n  };\n  return (\n    <StyledHelpButton className={className}>\n      {textVisible && <span className=\"text-panel\">{helpText}</span>}\n      <Button\n        content=\"?\"\n        fontSize=\"4rem\"\n        height=\"5rem\"\n        width=\"10rem\"\n        className=\"help-button\"\n        fn={toggleTextVisible}\n        disabled={!helpText}\n      />\n    </StyledHelpButton>\n  );\n};\n\nexport default Help;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { ChevronLeft, ChevronRight } from \"react-feather\";\n\nimport Help from \"../components/help\";\nimport Button from \"../components/button\";\nimport { getColor, getNeon } from \"../helpers/helpers\";\n\nconst StyledStepperController = styled.div`\n  border-top: 1px solid ${getColor(\"border\")};\n  display: flex;\n  justify-content: space-between;\n  margin-top: auto;\n  padding: 2vw 3vw 0 3vw;\n  margin-left: 2vw;\n  margin-right: 2vw;\n  margin-bottom: 5vh;\n\n  .controller-nav {\n    display: flex;\n  }\n  .glow-button {\n    border: none;\n    ${getNeon(\"success\", 0.3)}\n  }\n`;\n\nconst StepperController = ({ next, prev, help, steps, step, setSteps }) => {\n  const completeStep = () => {\n    const id = steps[step].tag;\n    setSteps(\n      steps.map((step) => {\n        return step.tag === id ? { ...step, completed: true } : step;\n      })\n    );\n  };\n\n  return (\n    <StyledStepperController>\n      <div className=\"controller-help\">\n        <Help helpText={help} className=\"QA-help\" />\n      </div>\n\n      <div className=\"controller-nav\">\n        <Button height=\"5rem\" content={<ChevronLeft size=\"5rem\" />} fn={prev} />\n        <Button\n          height=\"5rem\"\n          content={<ChevronRight size=\"5rem\" />}\n          fn={next}\n        />\n      </div>\n      <Button\n        height=\"5rem\"\n        width=\"12rem\"\n        content=\"Ready\"\n        fontSize={\"2rem\"}\n        fn={completeStep}\n      />\n    </StyledStepperController>\n  );\n};\n\nexport default StepperController;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { getColor, getNeon } from \"../helpers/helpers\";\n\nconst StyledCircle = styled.li`\n  height: 8rem;\n  width: 8rem;\n  border: 3px solid ${getColor(\"light\")};\n  list-style: none;\n  border-radius: 50%;\n  opacity: 0.5;\n  transition: 0.6s all;\n\n  &.completed {\n    border: 3px solid ${getColor(\"primary\")};\n  }\n\n  .circle-glow {\n    border: none;\n    ${getNeon(\"success\", 0.4)}\n  }\n`;\n\nconst Circle = ({ completed, className, active }) => {\n  // const [neon, setNeon] = useState({ isNeon: false, hasAnimated: false });\n  const [neon, setNeon] = useState(false);\n\n  useEffect(() => {\n    if (!neon && completed) {\n      setNeon(true);\n      // const animOutTimer = setTimeout(\n      //   () => setNeon({ isNeon: false, hasAnimated: true }),\n      //   1000\n      // );\n      // return () => clearTimeout(animOutTimer);\n    }\n  }, [completed, neon]);\n\n  return (\n    <>\n      <StyledCircle\n        className={`\n    ${completed && \"completed\"} \n      ${active && \"active\"} \n       ${className} `}\n      />\n      <div className={`${neon && \"circle-glow\"}`} />\n    </>\n  );\n};\n\nexport default Circle;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { getColor } from \"../helpers/helpers\";\nimport Circle from \"./circle.js\";\n\nconst StyledStepperNav = styled.div`\n  grid-row: 2/3;\n  grid-column: 2/3;\n\n  border-right: 1px solid ${getColor(\"border\")};\n  border-left: 1px solid ${getColor(\"border\")};\n\n  .nav-circle {\n    margin: 2rem auto;\n  }\n`;\nconst StepperNav = ({ steps }) => {\n  return (\n    <StyledStepperNav>\n      {steps.map((step, index) => {\n        console.log(step.completed);\n        return (\n          <Circle\n            completed={step.completed}\n            stepIndex={index}\n            key={step.tag}\n            className=\"nav-circle\"\n          />\n        );\n      })}\n    </StyledStepperNav>\n  );\n};\n\nexport default StepperNav;\n","export const data = [\n  {\n    step: 0,\n    tag: \"Q0\",\n    frame: [\n      {\n        type: \"message\",\n        message: \"Welcome to SteppinWolf JS\",\n      },\n      {\n        type: \"message\",\n        message: \"Let's start with an easy question\",\n      },\n      {\n        type: \"singleQA\",\n        question: \"How long has the Portal Project Discord been open?\",\n        subText: \"Rougly speaking.\",\n        help:\n          \"Type your response into the input then hit the submit button or the 'Enter' key to pass in your response.\",\n        response: \"Thanks. On to the next question\",\n        input: {\n          type: \"textBox\",\n          dataLabel: \"serverLifespan\",\n          validation: [\n            { type: \"not-empty\", response: \"Please type in a response\" },\n          ],\n        },\n      },\n    ],\n  },\n  {\n    step: 0,\n    tag: \"Q1\",\n    frame: [\n      {\n        type: \"message\",\n        message: \"Welcome to SteppinWolf JS\",\n      },\n      {\n        type: \"message\",\n        message: \"Let's start with an easy question\",\n      },\n      {\n        type: \"singleQA\",\n        question: \"How long has the Portal Project Discord been open?\",\n        subText: \"Rougly speaking. No need to be specific\",\n        help:\n          \"Type your response into the input then hit the submit button or the 'Enter' key to pass in your response.\",\n        input: {\n          type: \"textinput\",\n          dataLabel: \"serverLifespan\",\n          validation: [\n            { type: \"not-empty\", response: \"Please type in a response\" },\n          ],\n          response: \"Thanks. On to the next question\",\n        },\n      },\n    ],\n  },\n];\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport FrameFactory from \"../factories/frameFactory\";\nimport StepperController from \"./stepperController\";\nimport StepperNav from \"./stepperNav\";\nimport { data } from \"../helpers/instructions\";\nimport { getColor } from \"../helpers/helpers\";\n\nconst StepperWindow = styled.div`\n  height: 100vh;\n  display: grid;\n  grid-template-columns:\n    auto\n    minmax(100px, 150px) minmax(0, 20px) minmax(550px, 900px) minmax(\n      150px,\n      300px\n    )\n    auto;\n  grid-template-rows: minmax(0, 50px) 800px auto;\n  .stepper-panel {\n    background-color: ${getColor(\"bg\")};\n    /* border-radius: 50px; */\n    /* border-top: 1px solid ${getColor(\"\")}; */\n\n    grid-row: 2/3;\n    grid-column: 4/5;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    transition: 0.3s all;\n    box-shadow: none;\n    .glow {\n      /* border: 1px solid rgba(255, 255, 255, 1); */\n      box-shadow: 0 0 0.1vw 0.4vw #fff7f7, 0 0 0.4vw 0.6vw #e97272,\n        0 0 4vw 0.4vw #e50b0b, inset 0 0 1.5vw 0.4vw #e50b0b,\n        inset 0 0 0.4vw 0.2vw #e97272, inset 0 0 0.5vw 0.2vw #fff7f7;\n    }\n    /* padding: 4vw; */\n    /* padding-top: 3vh; */\n  }\n`;\n\nconst Stepper = () => {\n  const [steps, setSteps] = useState(\n    data.map((step) => {\n      return { ...step, completed: false };\n    })\n  );\n  const [frame, setFrame] = useState(2);\n  const [step, setStep] = useState(0);\n\n  const currentStep = steps[step];\n  const currentFrame = currentStep.frame[frame];\n\n  const nextFrame = () => setFrame((currentFrame) => currentFrame + 1);\n  const nextStep = () => {\n    setStep((currentStep) => currentStep + 1);\n  };\n  const next = () => {\n    if (frame + 1 < currentStep.frame.length) {\n      nextFrame();\n    } else {\n      nextStep();\n      setFrame(0);\n    }\n  };\n  const prev = () => {\n    if (frame === 0) {\n      setStep((thisStep) => thisStep - 1);\n      setFrame(currentStep.frame.length - 1);\n    } else {\n      setFrame((thisFrame) => thisFrame - 1);\n    }\n  };\n\n  return (\n    <StepperWindow>\n      <StepperNav step={step} frame={frame} steps={steps} />\n      <div className=\"stepper-panel\">\n        <FrameFactory frame={currentFrame} />\n        <StepperController\n          help={currentFrame.help}\n          next={next}\n          prev={prev}\n          setSteps={setSteps}\n          steps={steps}\n          step={step}\n        />\n      </div>\n    </StepperWindow>\n  );\n};\n\nexport default Stepper;\n","import React from \"react\";\nimport Stepper from \"./components/stepper\";\n\n// const REPO = \"https://github.com/jordanlesich/steppinwolftest\";\n\nfunction App() {\n  // useEffect(() => {\n  //   axios({\n  //     method: \"get\",\n  //     url: REPO,\n  //     headers: {\n  //       Accept: \"application/vnd.github.v3+json\",\n  //     },\n  //   }).then((response) => {\n  //     console.log(response.data);\n  //   });\n  // }, []);\n\n  return (\n    <div className=\"App\">\n      <Stepper />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}